# Development Environment - Database Configuration
# Aurora PostgreSQL Serverless v2 with cost optimization for development

# Database Module for Development Environment
module "database" {
  source = "../../modules/database"

  # Project configuration
  project_name = local.project_name
  environment  = local.environment

  # Network configuration from network module
  vpc_id                     = module.network.vpc_id
  db_subnet_group_name      = module.network.db_subnet_group_name
  database_security_group_id = module.security.database_security_group_id

  # Aurora cluster configuration
  cluster_identifier = "${local.project_name}-aurora"
  database_name     = "clinical_trial_dev"
  master_username   = "postgres"
  engine_version    = "15.4"

  # Development-specific Serverless v2 scaling
  min_capacity = 0.5   # Minimum for cost optimization
  max_capacity = 4     # Lower max for dev environment
  auto_pause   = true  # Enable auto-pause for cost savings
  auto_pause_delay = 300  # 5 minutes

  # Network and availability (single AZ for cost savings)
  enable_multi_az    = false  # Single AZ for development
  availability_zones = slice(data.aws_availability_zones.available.names, 0, 1)

  # Backup configuration (shorter retention for dev)
  backup_retention_period = 3      # 3 days for development
  backup_window          = "03:00-04:00"
  maintenance_window     = "sun:04:00-sun:05:00"
  skip_final_snapshot    = true    # Skip final snapshot in dev
  copy_tags_to_snapshot  = true

  # Security and encryption
  storage_encrypted = true
  # kms_key_id will be auto-generated by module
  enable_iam_database_authentication = true
  deletion_protection                = false  # Disabled for easier dev cleanup

  # Parameter groups (use module defaults for HIPAA compliance)
  parameter_group_family = "aurora-postgresql15"

  # Instance configuration
  instance_class       = "db.serverless"
  publicly_accessible  = false

  # Monitoring configuration (reduced for cost optimization)
  enable_performance_insights             = false  # Disabled for cost savings
  performance_insights_retention_period   = 7
  enable_enhanced_monitoring             = false  # Disabled for cost savings
  monitoring_interval                    = 0

  # Logging (minimal for development)
  enable_audit_logging           = true
  log_types                     = ["postgresql"]
  cloudwatch_log_retention_days = 7  # Shorter retention for dev

  # Cost optimization settings
  enable_cost_optimization = true

  # HIPAA compliance (enabled but with relaxed monitoring)
  enable_hipaa_compliance = true

  # Alerting configuration
  enable_connection_alarms  = true
  enable_performance_alarms = false  # Disabled for cost savings
  cpu_utilization_threshold = 80
  database_connections_threshold = 50  # Lower threshold for dev

  # Tags
  tags = merge(local.common_tags, {
    Component        = "database"
    DatabaseEngine   = "aurora-postgresql"
    DatabaseVersion  = "15.4"
    CostOptimized   = "true"
    AutoPause       = "true"
  })
}

# Data source for availability zones
data "aws_availability_zones" "available" {
  state = "available"
}

# Output database connection information for other modules
output "database_connection_info" {
  description = "Database connection information for development environment"
  value = {
    cluster_endpoint    = module.database.cluster_endpoint
    reader_endpoint     = module.database.cluster_reader_endpoint
    port               = module.database.cluster_port
    database_name      = module.database.cluster_database_name
    secret_arn         = module.database.secrets_manager_secret_arn
    kms_key_id         = module.database.kms_key_id
  }
  sensitive = true
}

# Output for Lambda function access
output "lambda_database_config" {
  description = "Database configuration for Lambda functions"
  value = {
    cluster_identifier = module.database.cluster_identifier
    endpoint          = module.database.cluster_endpoint
    port              = module.database.cluster_port
    database_name     = module.database.cluster_database_name
    secret_arn        = module.database.secrets_manager_secret_arn
    security_group_id = module.security.database_security_group_id
    subnet_group_name = module.network.db_subnet_group_name
    iam_role_arn      = module.database.lambda_db_access_role_arn
  }
  sensitive = true
}

# Output monitoring information
output "database_monitoring" {
  description = "Database monitoring configuration"
  value = {
    dashboard_url        = module.database.cloudwatch_dashboard_url
    sns_topic_arn       = module.database.sns_topic_arn
    log_groups          = module.database.cloudwatch_log_groups
    cost_budget_name    = module.database.cost_budget_name
  }
}

# Output operational information
output "database_operational_info" {
  description = "Database operational information"
  value = module.database.operational_info
}